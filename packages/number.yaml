
number:
  - platform: template
    name: "Luci Slot 1 Inizio Ore"
    optimistic: true
    restore_value: true
    min_value: 0
    max_value: 23
    step: 1
    on_value:
        then:
            lambda: |-
                id(lights_timer_slot_hour)[0] = (int)(x);
    
  - platform: template
    name: "Luci Slot 1 Inizio Minuti"
    optimistic: true
    restore_value: true
    min_value: 0
    max_value: 59
    step: 1
    on_value:
        then:
            lambda: |-
                id(lights_timer_slot_minute)[0] = (int)(x);
    
  - platform: template
    name: "Luci Slot 2 Inizio Ore"
    optimistic: true
    restore_value: true
    min_value: 0
    max_value: 23
    step: 1
    on_value:
        then:
            lambda: |-
                id(lights_timer_slot_hour)[1] = (int)(x);
    
  - platform: template
    name: "Luci Slot 2 Inizio Minuti"
    optimistic: true
    restore_value: true
    min_value: 0
    max_value: 59
    step: 1
    on_value:
        then:
            lambda: |-
                id(lights_timer_slot_minute)[1] = (int)(x);

  - platform: template
    name: "Luci Slot 3 Inizio Ore"
    optimistic: true
    restore_value: true
    min_value: 0
    max_value: 23
    step: 1
    on_value:
        then:
            lambda: |-
                id(lights_timer_slot_hour)[2] = (int)(x);
    
  - platform: template
    name: "Luci Slot 3 Inizio Minuti"
    optimistic: true
    restore_value: true
    min_value: 0
    max_value: 59
    step: 1
    on_value:
        then:
            lambda: |-
                id(lights_timer_slot_minute)[2] = (int)(x);

  - platform: template
    name: "Luci Slot 3 Termine Ore"
    optimistic: true
    restore_value: true
    min_value: 0
    max_value: 23
    step: 1
    on_value:
        then:
            lambda: |-
                id(lights_timer_slot_hour)[3] = (int)(x);
    
  - platform: template
    name: "Luci Slot 3 Termine Minuti"
    optimistic: true
    restore_value: true
    min_value: 0
    max_value: 59
    step: 1
    on_value:
        then:
            lambda: |-
                id(lights_timer_slot_minute)[3] = (int)(x);

  - platform: template
    name: "Luci a casa Valore Slot 0"
    optimistic: true
    restore_value: true
    min_value: 0
    max_value: 100
    step: 1
    on_value:
        then:
            lambda: |-
                id(lights_timer_slot_value_home)[0] = (int)(x);

  - platform: template
    name: "Luci a casa Valore Slot 1"
    optimistic: true
    restore_value: true
    min_value: 0
    max_value: 100
    step: 1
    on_value:
        then:
            lambda: |-
                id(lights_timer_slot_value_home)[1] = (int)(x);

  - platform: template
    name: "Luci a casa Valore Slot 2"
    optimistic: true
    restore_value: true
    min_value: 0
    max_value: 100
    step: 1
    on_value:
        then:
            lambda: |-
                id(lights_timer_slot_value_home)[2] = (int)(x);

  - platform: template
    name: "Luci a casa Valore Slot 3"
    optimistic: true
    restore_value: true
    min_value: 0
    max_value: 100
    step: 1
    on_value:
        then:
            lambda: |-
                id(lights_timer_slot_value_home)[3] = (int)(x);

  - platform: template
    name: "Luci fuori casa Valore Slot 0"
    optimistic: true
    restore_value: true
    min_value: 0
    max_value: 100
    step: 1
    on_value:
        then:
            lambda: |-
                id(lights_timer_slot_value_away)[0] = (int)(x);

  - platform: template
    name: "Luci fuori casa Valore Slot 1"
    optimistic: true
    restore_value: true
    min_value: 0
    max_value: 100
    step: 1
    on_value:
        then:
            lambda: |-
                id(lights_timer_slot_value_away)[1] = (int)(x);

  - platform: template
    name: "Luci fuori casa Valore Slot 2"
    optimistic: true
    restore_value: true
    min_value: 0
    max_value: 100
    step: 1
    on_value:
        then:
            lambda: |-
                id(lights_timer_slot_value_away)[2] = (int)(x);

  - platform: template
    name: "Luci fuori casa Valore Slot 3"
    optimistic: true
    restore_value: true
    min_value: 0
    max_value: 100
    step: 1
    on_value:
        then:
            lambda: |-
                id(lights_timer_slot_value_away)[3] = (int)(x);

  - platform: template
    name: "Feeder Slot 1 Ore"
    optimistic: true
    restore_value: true
    min_value: 0
    max_value: 23
    step: 1
    on_value:
        then:
            lambda: |-
                id(fishfeeder_timer_slot_hour)[0] = (int)(x);
    
  - platform: template
    name: "Feeder Slot 1 Minuti"
    optimistic: true
    restore_value: true
    min_value: 0
    max_value: 59
    step: 1
    on_value:
        then:
            lambda: |-
                id(fishfeeder_timer_slot_minute)[0] = (int)(x);
    
  - platform: template
    name: "Feeder Slot 2 Ore"
    optimistic: true
    restore_value: true
    min_value: 0
    max_value: 23
    step: 1
    on_value:
        then:
            lambda: |-
                id(fishfeeder_timer_slot_hour)[1] = (int)(x);
    
  - platform: template
    name: "Feeder Slot 2 Minuti"
    optimistic: true
    restore_value: true
    min_value: 0
    max_value: 59
    step: 1
    on_value:
        then:
            lambda: |-
                id(fishfeeder_timer_slot_minute)[1] = (int)(x);

  - platform: template
    name: "Feeder Posizione"
    id: feeder_slider
    optimistic: true
    restore_value: true
    min_value: 1
    max_value: 32
    step: 1
    on_value:
        then:
            - if:
                condition:
                    lambda: 'return (abs(id(fishfeeder_last_position) - x) > 1);'
                then:
                    - lambda: 'ESP_LOGD("feeder_slider", "Multiple step movement: last position %d, new position %", id(fishfeeder_last_position), x);'
                    - stepper.set_target:
                        id: fish_feeder_stepper
                        target: !lambda 'return -(68*(int)(x-1));'
                    - lambda: 'id (fishfeeder_last_position) = (int)x;'
                else:
                    - lambda: 'ESP_LOGD("feeder_slider", "Single step movement: last position %d, new position %", id(fishfeeder_last_position), x);'
                    - stepper.set_target:
                        id: fish_feeder_stepper
                        target: !lambda 'return -(68*(int)(x-1));'
                    - delay: 1s
                    - stepper.set_target:
                        id: fish_feeder_stepper
                        target: !lambda 'return -(68*(int)(x-1))+46;'     
                    - delay: 1s
                    - stepper.set_target:
                        id: fish_feeder_stepper
                        target: !lambda 'return -(68*(int)(x-1));'
                    - lambda: 'id (fishfeeder_last_position) = (int)x;'
                    - delay: 1s
                    - stepper.set_target:
                        id: fish_feeder_stepper
                        target: !lambda 'return -(68*(int)(x-1))+46;'     
                    - delay: 1s
                    - stepper.set_target:
                        id: fish_feeder_stepper
                        target: !lambda 'return -(68*(int)(x-1));'
                    - lambda: 'id (fishfeeder_last_position) = (int)x;'

  - platform: template
    name: "Pulizia anno"
    id: clean_year
    optimistic: true
    min_value: 2023
    max_value: 2030
    step: 1
    restore_value: true
    on_value:
        then:
            lambda: |-
                int year = id(clean_year).state;
                int month = id(clean_month).state;
                int daysOfMonth = 30;
                
                if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12)
                {   
                    daysOfMonth = 31;
                }
                else if((month == 2) && ((year%400==0) || (year%4==0 && year%100!=0)))	
                {
                    daysOfMonth = 29;
                }
                else if(month == 2)
                {
                    daysOfMonth = 28;
                }

                //id(clean_day).traits.set_max_value(daysOfMonth);

  - platform: template
    name: "Pulizia Mese"
    id: clean_month
    optimistic: true
    min_value: 1
    max_value: 12
    step: 1
    restore_value: true
    on_value:
        then:
            lambda: |-
                int year = id(clean_year).state;
                int month = id(clean_month).state;
                int daysOfMonth = 30;
                
                if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12)
                {   
                    daysOfMonth = 31;
                }
                else if((month == 2) && ((year%400==0) || (year%4==0 && year%100!=0)))	
                {
                    daysOfMonth = 29;
                }
                else if(month == 2)
                {
                    daysOfMonth = 28;
                }

                //id(clean_day).traits.set_max_value(daysOfMonth);

  - platform: template
    name: "Pulizia Giorno"
    id: clean_day
    optimistic: true
    min_value: 1
    max_value: 31
    step: 1
    restore_value: true
